name: refresh datasus files metadata

on:
  schedule:
    - cron: "1 3 * * *"    #runs at 03:01 UTC everyday
  workflow_dispatch:  # Allows manual trigger


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash


jobs:
  getdataandrefreshmap:
    timeout-minutes: 60  # Add timeout
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo content
        uses: actions/checkout@v4 # checkout the repository content to github runner.

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12 #install the python needed
          cache: 'pip' # cache the pip dependencies

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install .; fi

      - name: execute py script
        run: |
          python update-metadata.py
        continue-on-error: false  # This will make the workflow fail if the script fails

      - name: Check if there are any changes
        id: verify_diff
        run: |
          if git diff --quiet .; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit
        if: steps.verify_diff.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add metadata/
          git commit -m "Automated update of datasus files metadata" -a

      - name: Push
        if: steps.verify_diff.outputs.changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
    outputs:
      changed: ${{ steps.verify_diff.outputs.changed }}

  # Build job
  build:
    # Execute only if there was changes in the metadata
    needs: getdataandrefreshmap
    if: needs.getdataandrefreshmap.outputs.changed == 'true'
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.137.1
    steps:

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: 'main'  # checkout the main branch
          submodules: recursive
          fetch-depth: 0

      - name: Copy metadata
        run: |
          python copy-files.py

      - name: Checkout site branch
        run: |
          git checkout site

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
